apiVersion: v1
kind: ServiceAccount
metadata:
  name: prometheus
  namespace: monitoring
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: prometheus
rules:
- apiGroups: [""]
  resources:
  - nodes
  - services
  - endpoints
  - pods
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources:
  - configmaps
  verbs: ["get"]
- nonResourceURLs: ["/metrics"]
  verbs: ["get"]
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: prometheus
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: prometheus
subjects:
- kind: ServiceAccount
  name: prometheus
  namespace: monitoring
---
apiVersion: monitoring.coreos.com/v1
kind: Prometheus
metadata:
  name: prometheus
  namespace: monitoring
spec:
  alerting:
    alertmanagers:
    - namespace: monitoring
      name: alertmanager
      port: web
  baseImage: quay.io/prometheus/prometheus
  version: v2.10.0
  externalUrl: http://prometheus.monitoring.svc.cluster.local:9090
  paused: false
  replicas: 1
  logLevel:  info
  logFormat:  logfmt
  listenLocal: false
  enableAdminAPI: true
  retention: "10d"
  routePrefix: "/"
  serviceAccountName: prometheus
  serviceMonitorSelector:
    matchExpression:
    - name: type
      operator: Exists
  resources:
    requests:
      memory: 400Mi
  #serviceMonitorNamespaceSelector: {}
  securityContext:
    fsGroup: 2000
    runAsNonRoot: true
    runAsUser: 1000
  #ruleNamespaceSelector: {}
  ruleSelector:
    matchLabels:
      role: alert-rules
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus
  namespace: monitoring
spec:
  ports:
  - port: 9090
  selector:
    app: prometheus
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: prometheus
  namespace: monitoring
  annotations:
    certmanager.k8s.io/cluster-issuer: letsencrypt-prod
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/auth-realm: Authentication Required
    nginx.ingress.kubernetes.io/auth-secret: basic-auth
    nginx.ingress.kubernetes.io/auth-type: basic
spec:
  tls:
  - secretName: prometheus-tls
    hosts:
    - prometheus.lukeaddison.co.uk
  rules:
  - host: prometheus.lukeaddison.co.uk
    http:
      paths:
      - backend:
          serviceName: prometheus
          servicePort: 9090
