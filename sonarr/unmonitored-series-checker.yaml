apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: unmonitored-series-checker
  namespace: sonarr
spec:
  schedule: "*/10 * * * *"
  successfulJobsHistoryLimit: 1
  concurrencyPolicy: Replace
  jobTemplate:
    spec:
      backoffLimit: 1
      template:
        metadata:
          annotations:
            sidecar.istio.io/inject: "false"
        spec:
          restartPolicy: Never
          containers:
          - name: unmonitored-series-checker
            image: dippynark/python
            env:
            - name: SONARR_API_KEY
              valueFrom:
                secretKeyRef:
                  name: sonarr
                  key: sonarr_apikey
            args:
            - bash
            - -c
            - |
              set -euo pipefail

              cat > unmonitored-series-checker.py <<EOF
              import requests
              import json
              import os

              url = "http://sonarr.sonarr.svc.cluster.local/api/v3/series"
              r = requests.get(url, headers={"X-Api-Key": os.environ['SONARR_API_KEY']})
              r.raise_for_status()
              json_data = json.loads(r.text)

              for series in json_data:
                  unmonitored_series = False
                  if series["monitored"] == False:
                      series["monitored"] = True
                      unmonitored_series = True
                  for season in series["seasons"]:
                      if season["seasonNumber"] != 0 and season["monitored"] == False:
                          season["monitored"] = True
                          unmonitored_series = True
                  if unmonitored_series:
                      r = requests.put(url, headers={"X-Api-Key": os.environ['SONARR_API_KEY']}, data=json.dumps(series))
                      r.raise_for_status()
              EOF
              python unmonitored-series-checker.py
