apiVersion: v1
kind: ServiceAccount
metadata:
  name: job-cleanup
  namespace: jx-git-operator
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: job-cleanup
  namespace: jx-git-operator
rules:
- apiGroups: ["batch", "v1"]
  resources: ["jobs"]
  verbs: ["list", "delete"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: job-cleanup
  namespace: jx-git-operator
subjects:
- kind: ServiceAccount
  name: job-cleanup
  namespace: jx-git-operator
roleRef:
  kind: ClusterRole
  name: job-cleanup
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: job-cleanup
  namespace: jx-git-operator
spec:
  schedule: "*/1 * * * *"
  successfulJobsHistoryLimit: 1
  concurrencyPolicy: Replace
  jobTemplate:
    spec:
      backoffLimit: 1
      template:
        spec:
          restartPolicy: Never
          serviceAccountName: job-cleanup
          containers:
          - name: job-cleanup
            image: k8s.gcr.io/hyperkube:v1.18.10
            command:
            - /bin/bash
            - -c
            - |
              # Delete Jobs in the jx-git-operator Namespace that were started over an hour ago
              ONE_HOUR_AGO=$(date -d '1 hour ago' +"%FT%TZ")
              kubectl get jobs -n jx-git-operator -o json \
                | jq -r '.items[] | select(.status.startTime != null) | "\(.metadata.namespace) \(.metadata.name) \(.status.startTime)"' \
                | while read LINE; do
                NAMESPACE=$(echo $LINE | awk '{print $1}')
                NAME=$(echo $LINE | awk '{print $2}')
                COMPLETION_TIME=$(echo $LINE | awk '{print $3}')
                if [[ "$COMPLETION_TIME" < "$ONE_HOUR_AGO" ]];
                then
                    kubectl delete job -n $NAMESPACE $NAME
                fi
              done
