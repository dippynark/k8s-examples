# Source: kiali-server/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kiali
  namespace: kiali
  labels:
    helm.sh/chart: kiali-server-1.25.0
    app: kiali
    app.kubernetes.io/name: kiali
    app.kubernetes.io/instance: kiali
    version: "v1.25.0"
    app.kubernetes.io/version: "v1.25.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: kiali
      app.kubernetes.io/instance: kiali
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      name: kiali
      labels:
        helm.sh/chart: kiali-server-1.25.0
        app: kiali
        app.kubernetes.io/name: kiali
        app.kubernetes.io/instance: kiali
        version: "v1.25.0"
        app.kubernetes.io/version: "v1.25.0"
        app.kubernetes.io/managed-by: Helm
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
        kiali.io/runtimes: go,kiali
    spec:
      serviceAccountName: kiali
      containers:
        - image: "quay.io/kiali/kiali:v1.25.0"
          imagePullPolicy: Always
          name: kiali
          command:
            - "/opt/kiali/kiali"
            - "-config"
            - "/kiali-configuration/config.yaml"
            - "-v"
            - "3"
          ports:
            - name: api-port
              containerPort: 20001
            - name: http-metrics
              containerPort: 9090
          readinessProbe:
            httpGet:
              path: /kiali/healthz
              port: api-port
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 30
          livenessProbe:
            httpGet:
              path: /kiali/healthz
              port: api-port
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 30
          env:
            - name: ACTIVE_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          volumeMounts:
            - name: kiali-configuration
              mountPath: "/kiali-configuration"
            - name: kiali-cert
              mountPath: "/kiali-cert"
            - name: kiali-secret
              mountPath: "/kiali-secret"
      volumes:
        - name: kiali-configuration
          configMap:
            name: kiali
        - name: kiali-cert
          secret:
            secretName: istio.kiali-service-account
            optional: true
        - name: kiali-secret
          secret:
            secretName: kiali
            optional: true
