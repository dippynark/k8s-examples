apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: whatbox-orphan-torrent-remover
  namespace: monitoring
spec:
  schedule: "*/10 * * * *"
  successfulJobsHistoryLimit: 1
  jobTemplate:
    spec:
      backoffLimit: 1
      template:
        spec:
          restartPolicy: Never
          containers:
          - name: whatbox-orphan-torrent-remover
            image: python:3
            env:
            - name: WHATBOX_USERNAME
              valueFrom:
                secretKeyRef:
                  name: whatbox
                  key: username
            - name: WHATBOX_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: whatbox
                  key: password
            - name: WHATBOX_HOSTNAME
              valueFrom:
                secretKeyRef:
                  name: whatbox
                  key: hostname
            args:
            - bash
            - -c
            - |
              set -euo pipefail

              cat > whatbox-orphan-torrent-remover.py <<EOF
              import os
              import sys
              import xmlrpc.client
              from shutil import rmtree

              base_directory = "/mnt/whatbox/luke"

              # setup connection
              server_url = "https://%s:%s@%s/xmlrpc" % (os.environ['WHATBOX_USERNAME'], os.environ['WHATBOX_PASSWORD'], os.environ['WHATBOX_HOSTNAME']);
              server = xmlrpc.client.Server(server_url);

              # retrieve existing directories
              media_types = os.listdir(base_directory)
              existing_directories = []
              for media_type in media_types:
                  directories = os.listdir(os.path.join(base_directory, media_type))
                  directories = list(map(lambda x: os.path.join(os.path.join(base_directory, media_type), x), directories))
                  existing_directories = existing_directories + directories

              # retrieve torrent directories
              torrents = server.d.multicall.filtered("",
                  "main",
                  "or=\"equal=d.custom1=,cat=LukeBooks\",\"equal=d.custom1=,cat=LukeFilms\",\"equal=d.custom1=,cat=LukeMusic\",\"equal=d.custom1=,cat=LukeTVShows\",\"equal=d.custom1=,cat=LukeApplications\",\"equal=d.custom1=,cat=LukeGames\"",
                  "d.name=",
                  "d.get_directory=")
              torrent_directories = []
              for torrent in torrents:
                  torrent_name = torrent[0]
                  torrent_directory = torrent[1]
                  torrent_directory = os.path.join(torrent_directory.replace("/home/%s/files" % os.environ['WHATBOX_USERNAME'], "/mnt/whatbox").replace(torrent_name, ""), torrent_name)
                  torrent_directories.append(torrent_directory)
              for directory in existing_directories:
                  if directory not in torrent_directories:
                      print(directory)
                      if os.path.isfile(directory):
                        os.remove(directory)
                        continue
                      if os.path.isdir(directory):
                        rmtree(directory)
                        continue
                      print("ERROR: path is neither a file nor a directory: %s" % directory)
                      sys.exit(1)
              EOF
              python whatbox-orphan-torrent-remover.py
            volumeMounts:
            - name: whatbox-luke
              mountPath: /mnt/whatbox/luke
          volumes:
            - name: whatbox-luke
              persistentVolumeClaim:
                claimName: whatbox-luke
