apiVersion: v1
kind: ServiceAccount
metadata:
  name: prometheus
  namespace: monitoring
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: prometheus
rules:
- apiGroups: [""]
  resources:
  - nodes
  - services
  - endpoints
  - pods
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources:
  - configmaps
  verbs: ["get"]
- nonResourceURLs: ["/metrics"]
  verbs: ["get"]
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: prometheus
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: prometheus
subjects:
- kind: ServiceAccount
  name: prometheus
  namespace: monitoring
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: monitoring-prometheus
spec:
  capacity:
    storage: 10Gi
  accessModes:
  - ReadWriteOnce
  local:
    path: /mnt/data/kubernetes/volumes/monitoring-prometheus
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
          - core1
---
apiVersion: monitoring.coreos.com/v1
kind: Prometheus
metadata:
  name: prometheus
  namespace: monitoring
spec:
  alerting:
    alertmanagers:
    - namespace: monitoring
      name: alertmanager
      port: web
  version: v2.10.0
  externalUrl: http://prometheus.monitoring.svc.cluster.local:9090
  enableAdminAPI: true
  scrapeInterval: 30s
  serviceAccountName: prometheus
  serviceMonitorSelector: {}
  podMetadata:
    annotations:
      sidecar.istio.io/inject: "false"
  resources:
    requests:
      memory: 400Mi
  securityContext:
    fsGroup: 2000
    runAsNonRoot: true
    runAsUser: 1000
  ruleSelector:
    matchLabels:
      role: alert-rules
  storage:
    volumeClaimTemplate:
      spec:
        resources:
          requests:
            storage: 10Gi
        accessModes:
        - ReadWriteOnce
        volumeName: monitoring-prometheus
        storageClassName: ""
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus
  namespace: monitoring
  labels:
    app: prometheus
spec:
  ports:
  - name: http-web
    port: 9090
    targetPort: web
  selector:
    app: prometheus
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: prometheus
  namespace: monitoring
  annotations:
    certmanager.k8s.io/cluster-issuer: letsencrypt-prod
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/auth-url: "https://oauth2.lukeaddison.co.uk/oauth2/auth"
    nginx.ingress.kubernetes.io/auth-signin: "https://oauth2.lukeaddison.co.uk/oauth2/start?rd=https://$host$request_uri"
spec:
  tls:
  - secretName: prometheus-tls
    hosts:
    - prometheus.lukeaddison.co.uk
  rules:
  - host: prometheus.lukeaddison.co.uk
    http:
      paths:
      - backend:
          serviceName: prometheus
          servicePort: 9090
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: prometheus
  namespace: monitoring
spec:
  jobLabel: prometheus
  selector:
    matchLabels:
      app: prometheus
  endpoints:
  - port: http-web
