apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: whatbox-torrent-status-checker
  namespace: monitoring
spec:
  schedule: "*/10 * * * *"
  successfulJobsHistoryLimit: 1
  jobTemplate:
    spec:
      backoffLimit: 1
      template:
        spec:
          restartPolicy: Never
          containers:
          - name: whatbox-torrent-status-checker
            image: python:3
            env:
            - name: WHATBOX_USERNAME
              valueFrom:
                secretKeyRef:
                  name: whatbox
                  key: username
            - name: WHATBOX_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: whatbox
                  key: password
            - name: WHATBOX_HOSTNAME
              valueFrom:
                secretKeyRef:
                  name: whatbox
                  key: hostname
            args:
            - bash
            - -c
            - |
              set -euo pipefail

              cat > whatbox-torrent-status-checker.py <<EOF
              import datetime
              import os
              import sys
              import xmlrpc.client

              current_time = datetime.datetime.now().time()
              if current_time < datetime.time(10) or datetime.time(22) < current_time:
                  sys.exit(0)

              server_url = "https://%s:%s@%s/xmlrpc" % (os.environ['WHATBOX_USERNAME'], os.environ['WHATBOX_PASSWORD'], os.environ['WHATBOX_HOSTNAME']);
              server = xmlrpc.client.Server(server_url);

              torrents = server.d.multicall.filtered("",
                  "main",
                  "or=\"equal=d.custom1=,cat=LukeBooks\",\"equal=d.custom1=,cat=LukeFilms\",\"equal=d.custom1=,cat=LukeMusic\",\"equal=d.custom1=,cat=LukeTVShows\",\"equal=d.custom1=,cat=LukeApplications\",\"equal=d.custom1=,cat=LukeGames\"",
                  "d.name=",
                  "d.hash=",
                  "d.state=",
                  "d.is_open=",
                  "d.is_active=",
                  "d.message=")

              irrecoverable_errors = False
              for torrent in torrents:
                  name = torrent[0]
                  hash = torrent[1]
                  state = torrent[2]
                  is_open = torrent[3]
                  is_active = torrent[4]
                  message = torrent[5]
                  if state != 1 or is_open != 1 or is_active != 1 or message != "":

                      if message.startswith('Tracker: [') and message.endswith(']'):
                          tracker_message = message[len('Tracker: ['):len(message) - len(']')]

                          if tracker_message == 'Timed out':
                              continue
                          if tracker_message == "Couldn't connect to server":
                              continue
                          if tracker_message == "Timeout was reached":
                              continue
                          if tracker_message == "Could not parse bencoded data: 504 Gateway Time-out    504 Gateway Time-out  nginx":
                              continue
                          if tracker_message == "Could not parse bencoded data: 502 Bad Gateway    502 Bad Gateway  nginx":
                              continue
                          if tracker_message == "SSL connect error":
                              continue

                          if tracker_message.startswith('Failure reason "') and tracker_message.endswith('"'):
                              tracker_failure_reason = tracker_message[len('Failure reason "'):len(tracker_message) - len('"')]
                              if tracker_failure_reason == 'Unregistered torrent':
                                  print("Erasing %s: %s" % (name, tracker_failure_reason))
                                  server.d.erase(hash)
                                  continue

                      irrecoverable_errors = True
                      print("Name: %s, Message: %s" % (name, message))

              if irrecoverable_errors:
                  sys.exit(1)
              EOF
              python whatbox-torrent-status-checker.py
