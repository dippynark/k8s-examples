apiVersion: v1
kind: Service
metadata:
  name: radarr
  namespace: radarr
spec:
  ports:
  - name: http
    port: 80
    targetPort: 7878
  selector:
    app: radarr
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    certmanager.k8s.io/cluster-issuer: letsencrypt-prod
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/auth-realm: Authentication Required
    nginx.ingress.kubernetes.io/auth-secret: basic-auth
    nginx.ingress.kubernetes.io/auth-type: basic
  name: radarr
  namespace: radarr
spec:
  tls:
  - hosts:
    - radarr.lukeaddison.co.uk
    secretName: radarr-tls
  rules:
  - host: radarr.lukeaddison.co.uk
    http:
      paths:
      - backend:
          serviceName: radarr
          servicePort: 80
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: radarr
  namespace: radarr
spec:
  template:
    metadata:
      labels:
        app: radarr
    spec:
      containers:
      - name: connect
        image: python:3.7
        env:
        - name: WHATBOX_USERNAME
          valueFrom:
            secretKeyRef:
              name: radarr
              key: whatbox_username
        - name: WHATBOX_PASSWORD
          valueFrom:
            secretKeyRef:
              name: radarr
              key: whatbox_password
        - name: WHATBOX_HOSTNAME
          valueFrom:
            secretKeyRef:
              name: radarr
              key: whatbox_hostname
        - name: RADARR_USERNAME
          valueFrom:
            secretKeyRef:
              name: radarr
              key: radarr_username
        - name: RADARR_PASSWORD
          valueFrom:
            secretKeyRef:
              name: radarr
              key: radarr_password
        - name: RADARR_APIKEY
          valueFrom:
            secretKeyRef:
              name: radarr
              key: radarr_apikey
        - name: PUSHBULLET_ACCESS_TOKEN
          valueFrom:
            secretKeyRef:
              name: radarr
              key: pushbullet_access_token
        volumeMounts:
        - name: link-script
          mountPath: /opt/bin/link.py
          subPath: link.py
        - name: connect
          mountPath: /connect
        command:
        - sh
        - -c
        - |
          pip install requests pushbullet.py
          while true; do
            find /connect -type f -exec /opt/bin/link.py $WHATBOX_USERNAME $WHATBOX_PASSWORD $WHATBOX_HOSTNAME $RADARR_USERNAME $RADARR_PASSWORD $RADARR_APIKEY $PUSHBULLET_ACCESS_TOKEN {} \;
            sleep 10
          done
      - name: radarr
        image: dippynark/radarr
        imagePullPolicy: Always
        resources:
          requests:
            cpu: 50m
            memory: 100Mi
        readinessProbe:
          httpGet:
            path: /
            port: 7878
          timeoutSeconds: 30
          periodSeconds: 30
        livenessProbe:
          httpGet:
            path: /
            port: 7878
          failureThreshold: 10
          timeoutSeconds: 30
          periodSeconds: 30
          initialDelaySeconds: 180
        ports:
        - containerPort: 7878
          name: http
        env:
        - name: TZ
          value: Europe/London
        - name: PUID
          value: "1000"
        - name: PGID
          value: "1000"
        volumeMounts:
        - name: films
          mountPath: /films
        - name: config
          mountPath: /config
        - name: whatbox
          mountPath: /mnt/whatbox
          readOnly: true
        - name: connect
          mountPath: /connect
        - name: connect-script
          mountPath: /opt/bin/connect.sh
          subPath: connect.sh
      nodeName: core1
      volumes:
      - name: whatbox
        hostPath:
          path: /mnt/whatbox
      - name: films
        hostPath:
          path: /mnt/data/media/Films
      - name: config
        hostPath:
          path: /mnt/data/volumes/radarr
      - name: connect
        persistentVolumeClaim:
          claimName: connect
      - name: connect-script
        configMap:
          name: radarr
          items:
          - key: connect.sh
            path: connect.sh
            mode: 0555
      - name: link-script
        configMap:
          name: radarr
          items:
          - key: link.py
            path: link.py
            mode: 0555
