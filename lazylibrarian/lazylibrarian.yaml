apiVersion: v1
kind: Service
metadata:
  name: lazylibrarian
  namespace: lazylibrarian
spec:
  ports:
  - name: http
    protocol: TCP
    port: 80
    targetPort: 5299
  selector:
    app: lazylibrarian
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    certmanager.k8s.io/cluster-issuer: letsencrypt-prod
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/auth-url: "https://oauth2.lukeaddison.co.uk/oauth2/auth"
    nginx.ingress.kubernetes.io/auth-signin: "https://oauth2.lukeaddison.co.uk/oauth2/start?rd=https://$host$request_uri"
  name: lazylibrarian
  namespace: lazylibrarian
spec:
  tls:
  - hosts:
    - lazylibrarian.lukeaddison.co.uk
    secretName: lazylibrarian-tls
  rules:
  - host: lazylibrarian.lukeaddison.co.uk
    http:
      paths:
      - backend:
          serviceName: lazylibrarian
          servicePort: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: lazylibrarian
  namespace: lazylibrarian
spec:
  selector:
    matchLabels:
      app: lazylibrarian
  template:
    metadata:
      labels:
        app: lazylibrarian
    spec:
      containers:
      - name: lazylibrarian
        image: linuxserver/lazylibrarian
        imagePullPolicy: Always
        resources:
          requests:
            cpu: 50m
            memory: 100Mi
        readinessProbe:
          httpGet:
            path: /
            port: 5299
          timeoutSeconds: 15
          periodSeconds: 15
        livenessProbe:
          httpGet:
            path: /
            port: 5299
          failureThreshold: 3
          timeoutSeconds: 15
          periodSeconds: 15
          initialDelaySeconds: 300
        ports:
        - containerPort: 5299
          name: http
        env:
        - name: TZ
          value: Europe/London
        - name: PUID
          value: "1000"
        - name: PGID
          value: "1000"
        - name: DOCKER_MODS
          value: linuxserver/calibre-web:calibre
        volumeMounts:
        - name: books
          mountPath: /books
        - name: config
          mountPath: /config
      volumes:
      - name: books
        hostPath:
          path: /mnt/data/media/Books
      - name: config
        persistentVolumeClaim:
          claimName: config
